#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

$plugins_default="pretix.plugins.sendmail,pretix.plugins.statistics,pretix.plugins.checkinlists"
ynh_app_setting_set --key=plugins_default --value=$plugins_default

$plugins_exclude=""
ynh_app_setting_set --key=plugins_exclude --value=$plugins_exclude

$obligatory_2fa=false
ynh_app_setting_set --key=obligatory_2fa --value=$obligatory_2fa

$log_level="INFO"
ynh_app_setting_set --key=log_level --value=$log_level

$mail_user=$app
ynh_app_setting_set --key=mail_user --value=$mail_user

$mail_domain=$domain
ynh_app_setting_set --key=mail_domain --value=$mail_domain

$mail_admins=$(ynh_user_get_info --username="$admin" --key="mail")
ynh_app_setting_set --key=mail_admins --value=$mail_admins

$lang_enabled=""
ynh_app_setting_set --key=lang_enabled --value=$lang_enabled

$custom_lang_dir=""
ynh_app_setting_set --key=custom_lang_dir --value=$custom_lang_dir

$cache_tickets=72
ynh_app_setting_set --key=cache_tickets --value=$cache_tickets

$order_code=5
ynh_app_setting_set --key=order_code --value=$order_code

$ticket_secret=32
ynh_app_setting_set --key=ticket_secret --value=$ticket_secret

$voucher_code=16
ynh_app_setting_set --key=voucher_code --value=$voucher_code

$max_size_image=10
ynh_app_setting_set --key=max_size_image --value=$max_size_image

$max_size_email_auto_attachment=1
ynh_app_setting_set --key=max_size_email_auto_attachment --value=$max_size_email_auto_attachment

#=================================================
# INSTALL PYTHON APP & DEPENDENCIES
#=================================================
ynh_script_progression "Installing Python app & dependencies..."

# Make sure required Python version is installed
check_python $py_version

pushd $install_dir
    # Set virtual environment
    set_venv "$install_dir/.venv"
    source .venv/bin/activate

    # Make virtual environment available in app shell for future potential admin needs (e.g. `yunohost app shell $app`).
    echo "source $install_dir/.venv/bin/activate" >> .bashrc

    # Install python dependencies
    ynh_exec_as_app .venv/bin/pip$py_vshort install --upgrade pip setuptools wheel gunicorn 2>&1
    
    # Install app
    ynh_exec_as_app .venv/bin/pip$py_vshort install pretix 2>&1
popd

chown -R "$app:www-data" "$install_dir"

mkdir -p "$data_dir/data/media"
chmod +x "$data_dir"

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration files..."

# Create Redis databases 
redis_db=$(ynh_redis_get_free_db)

redis_lock "redis_db" #use lock to make sure redis helper will not return the ID of a preivously created db during the next call
redis_db_backend=$(ynh_redis_get_free_db)

redis_lock "redis_db_backend" #use lock to make sure redis helper will not return the ID of a preivously created db during the next call
redis_db_broker=$(ynh_redis_get_free_db)

redis_unlock "redis_db"
redis_unlock "redis_db_backend"

# Copy & hydrate template config file
ynh_config_add --template="pretix.cfg" --destination=$install_dir
chmod 600 $install_dir/pretix.cfg
chown "$app:$app" $install_dir/pretix.cfg

#=================================================
# BUILD APP
#=================================================
ynh_script_progression "Compiling static files & translations..."

# Compile static files and translation data and create the database structure
pushd $install_dir
    source .venv/bin/activate
    ynh_exec_as_app python -m pretix migrate
    ynh_exec_as_app python -m pretix rebuild
popd

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

# Create a dedicated NGINX config using the conf/nginx.conf template
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd --service=$app-web --template=$app-web.service
ynh_config_add_systemd --service=$app-worker --template=$app-worker.service

# Add related services
yunohost service add "$app-web" --description="Gunicorn for pretix" --log="/var/log/$app/$app-web.log"
yunohost service add "$app-worker" --description="Celery for pretix" --log="/var/log/$app/$app-worker.log"

# Add cron job running as user "$app"
ynh_add_config --template="$app.cron" --destination="/etc/cron.d/$app" 
#chown root:root /etc/cron.d/$app
#chmod 644 /etc/cron.d/$app

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

# Create a dedicated Fail2Ban config
#ynh_config_add_fail2ban --logpath="/var/log/nginx/${domain}-error.log" --failregex="Regex to match into the log for a failed login"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="$app-web" --action="start" --log_path="/var/log/$app/$app-web.log"
ynh_systemctl --service="$app-worker" --action="start" --log_path="/var/log/$app/$app-worker.log"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
