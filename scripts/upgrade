#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

# Load settings used as template tags 
plugins_default=$(ynh_app_setting_get --app=$app --key=plugins_default)
plugins_exclude=$(ynh_app_setting_get --app=$app --key=plugins_exclude)
obligatory_2fa=$(ynh_app_setting_get --app=$app --key=obligatory_2fa)
log_level=$(ynh_app_setting_get --app=$app --key=log_level)
mail_user=$(ynh_app_setting_get --app=$app --key=mail_user)
mail_domain=$(ynh_app_setting_get --app=$app --key=mail_domain)
mail_admins=$(ynh_app_setting_get --app=$app --key=mail_admins)
lang_enabled=$(ynh_app_setting_get --app=$app --key=lang_enabled)
custom_lang_dir=$(ynh_app_setting_get --app=$app --key=custom_lang_dir)
cache_tickets=$(ynh_app_setting_get --app=$app --key=cache_tickets)
order_code=$(ynh_app_setting_get --app=$app --key=order_code)
ticket_secret=$(ynh_app_setting_get --app=$app --key=ticket_secret)
voucher_code=$(ynh_app_setting_get --app=$app --key=voucher_code)
max_size_image=$(ynh_app_setting_get --app=$app --key=max_size_image)
max_size_email_auto_attachment=$(ynh_app_setting_get --app=$app --key=max_size_email_auto_attachment)

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service="$app-web" --action="stop"
ynh_systemctl --service="$app-worker" --action="stop"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

### ynh_setup_source can wipe the destination dir if called with --full_replace.
### On upgrade, that is certainly what you want, to remove any old source file that
### does not exist in the new version of the software.
### You can list with --keep every file/directory to *not* wipe or overwrite,
### useful for configuration files, data directories, or plugins.
# Download, check integrity, uncompress and patch the source from manifest.toml
ynh_setup_source --dest_dir="$install_dir" --full_replace --keep=".env data"

### $install_dir will automatically be initialized with some decent
### permissions by default... however, you may need to recursively reapply
### ownership to all files such as after the ynh_setup_source step
chown -R "$app:www-data" "$install_dir"

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating $app's configuration files..."

### Same as during install
###
### The file will automatically be backed-up if it's found to be manually modified (because
### ynh_config_add keeps track of the file's checksum)

ynh_config_add --template="some_config_file" --destination="$install_dir/some_config_file"

# FIXME: this should be handled by the core in the future
### You may need to use chmod 600 instead of 400,
### for example if the app is expected to be able to modify its own config
chmod 400 "$install_dir/some_config_file"
chown "$app:www-data" "$install_dir/some_config_file"

### For more complex cases where you want to replace stuff using regexes,
### you shoud rely on ynh_replace (which is basically a wrapper for sed)
### When doing so, you also need to manually call ynh_store_file_checksum
###
### ynh_replace --match="match_string" --replace="replace_string" --file="$install_dir/some_config_file"
### ynh_store_file_checksum "$install_dir/some_config_file"

#=================================================
# REAPPLY SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

### This should be a literal copypaste of what happened in the install's "System configuration" section

ynh_config_add_phpfpm

ynh_config_add_nginx

ynh_config_add_systemd

yunohost service add "$app" --description="A short description of the app" --log="/var/log/$app/$app.log"

ynh_config_add_logrotate

ynh_config_add_fail2ban --logpath="/var/log/nginx/${domain}-error.log" --failregex="Regex to match into the log for a failed login"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="$app" --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
